def getBranchType(branchName, tagName) {
    def devPattern = ".*master"
    def qaPatterns = ".*qa/.*"
    def releasePattern = ".*release/.*"
    def productionPattern = "v.*"

    if (tagName =~ productionPattern) {
        return "PRODUCTION"
    } else if (branchName =~ devPattern) {
        return "DEV"
    } else if (branchName =~ qaPatterns) {
        return "QA"
    } else if (branchName =~ releasePattern) {
        return "STAGE"
    } else {
        return null;
    }
}


node {
    def branchType
    def version
    
    stage('Clone repo'){
        checkout scm
    }
    
    stage('Determine tag'){
        branchType = getBranchType(env.BRANCH_NAME, env.TAG_NAME)
        
        if (branchType == 'DEV') {
            version = "${env.BUILD_NUMBER}"
            tag = 'develop-v' + "${env.BUILD_NUMBER}"
        } else if (branchType == 'QA') {
            version = ("${env.BRANCH_NAME}"=~/^(qa)\/(\d+\.\d+)/)[0][2]
            tag = 'qa-v' + version + ".${env.BUILD_NUMBER}"
        } else if (branchType == 'STAGE') {
            version = ("${env.BRANCH_NAME}"=~/^(release)\/(\d+\.\d+)/)[0][2]
            tag = 'release-v' + version
        } else if (branchType == 'PRODUCTION') {
            version = ("${env.TAG_NAME}"=~/^(v)(\d+\.\d+)/)[0][2]
            tag = 'release-v' + version
        }
        
        channel = credentials('jenkins-release-alerts')
        
        echo "Current Branch Type is ${branchType}"
        echo "Current Version is ${version}"
        echo "Current Channel is ${channel}"
        office365ConnectorSend message: 'TEST', status: 'STARTED', webhookUrl: $channel
    }
    
    stage('Build'){
        sh 'env > env.txt' 
        for (String i : readFile('env.txt').split("\r?\n")) {
            println i
        }
    }
    
    if (branchType == 'DEV') {
        stage('Test'){
            echo "Run tests"
        }
    }
    
    stage('Deploy') {
        echo "Run deploy"
    }
    
}
